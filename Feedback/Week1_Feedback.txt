Starting weekly feedback for Tristan, Week1

Current Points = 100

Note that: 
(1) Major sections begin with a double "====" line 
(2) Subsections begin with a single "====" line 
(3) Code output or text file content are printed within single "*****" lines 

======================================================================
======================================================================
Your Git repo size this week is about 1.58 MiB on disk 

PART 1: Checking project workflow...

Found the following directories in parent directory: .git, Feedback, Week1, Week2

Found the following files in parent directory: README.md, .gitignore

Checking for key files in parent directory...

Found .gitignore in parent directory, great! 

Printing contents of .gitignore:

**********************************************************************
*.aux 
*.bbl 
*.blg 
*fdb* 
*.fls 
*.log 
*.syncte* 
*~ 
*.tmp

**********************************************************************

Found README in parent directory, named: README.md

Printing contents of README.md:

**********************************************************************
# CMEECourseWork

**********************************************************************

======================================================================
Looking for the weekly directories...

Found 2 weekly directories: Week1, Week2

The Week1 directory will be assessed 

======================================================================
======================================================================
PART 2: Checking weekly code and workflow...

======================================================================
Assessing WEEK1...

Found the following directories: Challenges, Data, Code, Results, Sandbox

Found the following files: README.md

Checking for readme file in weekly directory...

Found README in parent directory, named: README.md

Printing contents of README.md:

**********************************************************************
# Welcome to Week1
Challenges holds my answer to the bash command challenge, Sandbox is for personal fun and in the Data directory you will find files holding relevant data to the scripts in Code and for use in Sandbox
For the Code directory I will go into more detail.

### In Code you shall find:
 
 Script       | Description
 ------------- | -------------
 UnixPrac1.txt |  **1.** Print how many lines for each file under the fasta directory **2.** Print lines excluding line 1 for ecoli file, activate head if you don't want it all **3.** Print count of pattern 'ATGC', excluding first lines and new lines **4.** Calculates and prints AT/GC ratio  
 boilerplate.sh | A boilerplate for all shell scripts
 ConcatenateTwoFiles.sh  | Prints the concatenation of 2 given files
 CountLines.sh | Prints the line count for a given file
 csvtospace.sh | Converts a .csv into a space separated values file of a given name or otherwise the same name but with added extensions
 MyExampleScript.sh | Says hello to user
 tabtocsv.sh | Converts a tab separated values file into a .csv file
 tiff2mng.sh | Converts a .tiff file into a .png file
 variables.sh | Lets you set a variable and makes a variable through adding 2 given numerical values together
 CompileLaTeX.sh | Compiles a given .tex file and produces a pdf
 FirstBiblio.bib | Holds the bibliography for the FirstExample.tex file
 FirstExample.tex | My first .tex file, somewhat discusses Einstein
  

**********************************************************************

Results directory is empty - good! 

Found 12 code files: ConcatenateTwoFiles.sh, tiff2png.sh, UnixPrac1.txt, variables.sh, CountLines.sh, FirstBiblio.bib, csvtospace.sh, CompileLaTeX.sh, boilerplate.sh, FirstExample.tex, tabtocsv.sh, MyExampleScript.sh

======================================================================
Testing script/code files...

======================================================================
Inspecting script file ConcatenateTwoFiles.sh...

File contents are:

**********************************************************************
#!/bin/bash

# Author: Tristan JC tjc19@ic.ac.uk
# Script: ConcatenateTwoFiles.sh
# Desc: concatenate 2 files
# Arguments: 2 files to be concatenated and one path for the new file
# Date: Oct 2020
if [ $# -ne 3 ]
  then
    echo "missing or too many arguments, try again with 2 files you wish concatenated and 1 new file path"
    exit
fi

cat $1 > $3
cat $2 >> $3
echo "Merged File is"
cat $3

**********************************************************************

Testing ConcatenateTwoFiles.sh...

Output (only first 500 characters): 


**********************************************************************
missing or too many arguments, try again with 2 files you wish concatenated and 1 new file path

**********************************************************************

Code ran without errors

Time consumed = 0.00381s

======================================================================
Inspecting script file tiff2png.sh...

File contents are:

**********************************************************************
#!/bin/bash

# Author: Tristan JC tjc19@ic.ac.uk
# Script: tiff2png.sh
# Desc: COnverts tif to png
# Arguments: 1 .tif file
# Date: Oct 2020

if [ $# -ne 1 ]
  then
    echo "No or too many arguments supplied, try again with 1 file you wish converted"
    exit
fi

if [ ${1: -4} != ".tif" ]
  then
     read -p "$1 is not labelled as a .tif file, try and continue anyway? (Yy/Nn)"
     if [[ $REPLY =~ ^[Nn]$ ]]
       then
         exit
     fi
fi

for f in *.tiff;
	do
		echo "Converting $f";
		convert "$f" "$(basename "$f$ .tif).png";
	done

**********************************************************************

Testing tiff2png.sh...

Output (only first 500 characters): 


**********************************************************************
No or too many arguments supplied, try again with 1 file you wish converted

**********************************************************************

Code ran without errors

Time consumed = 0.00490s

======================================================================
Inspecting script file UnixPrac1.txt...

File contents are:

**********************************************************************
#FASTA Exercise Week 1
# starting in ~/doc, copy fasta data from TheMulQuaBio to week 1 data:
# cp -r ../../../TheMulQuaBio/content/data/fasta ../Data/

#1  How many lines for each file under the fasta directory
wc -l ../Data/fasta/*

#2  print lines excluding line 1 for ecoli file, activate head if you don't want it all
tail -n +2 ../Data/fasta/E.coli.fasta 

#3  count of pattern 'ATGC', excluding first lines and new lines
tail -n +2 ../Data/fasta/E.coli.fasta | tr -d '\n' | grep -o 'ATGC' | wc -l

#4  compute AT/GC ratio 
#Use bc or R or whatever else in terminal with command substitution:
bc -l <<< "scale=7;$(tail -n +2 ../Data/fasta/E.coli.fasta | grep -o 'A\|T' | wc -l)/$( tail -n +2 ../Data/fasta/E.coli.fasta | grep -o 'G\|C' | wc -l)"

**********************************************************************

Testing UnixPrac1.txt...

======================================================================
Inspecting script file variables.sh...

File contents are:

**********************************************************************
#!/bin/bash

# Author: Tristan JC tjc19@ic.ac.uk
# Script: variables.sh
# Desc: sets a variable and adds 2 values together
# Arguments: a string and 2 numerical values
# Date: Oct 2020

# Shows the use of variables 
MyVar= 'some string'
echo 'the current value of the variable is' $MyVar
echo 'Please enter a new string'
read MyVar
echo 'the current value of the variable is' $MyVar

## Reading multiple values
echo 'Enter two numbers separated by space(s)'
read a b
echo 'you entered' $a 'and' $b '. Their sum is:'
mysum=`expr $a + $b`
echo $mysum

**********************************************************************

Testing variables.sh...

Output (only first 500 characters): 


**********************************************************************
the current value of the variable is
Please enter a new string
the current value of the variable is
Enter two numbers separated by space(s)
you entered and . Their sum is:


**********************************************************************

Encountered error (or warning):
variables.sh: line 10: some string: command not found
expr: syntax error: missing argument after ‘+’

======================================================================
Inspecting script file CountLines.sh...

File contents are:

**********************************************************************
#!/bin/bash

# Author: Tristan JC tjc19@ic.ac.uk
# Script: CountLines.sh
# Desc: tells you the line count of a given file
# Arguments: a file you want the line count of
# Date: Oct 2020

if [ $# -ne 1 ]
  then
    echo "No or too many arguments supplied, try again with 1 file you wish the line count of"
    exit
fi

NumLines=`wc -l < $1`
echo "The file $1 has $NumLines lines"
echo

**********************************************************************

Testing CountLines.sh...

Output (only first 500 characters): 


**********************************************************************
No or too many arguments supplied, try again with 1 file you wish the line count of

**********************************************************************

Code ran without errors

Time consumed = 0.00714s

======================================================================
Inspecting script file FirstBiblio.bib...

File contents are:

**********************************************************************
@article{einstein1905does,
  title={Does the inertia of a body depend upon its energy-content},
  author={Einstein, Albert},
  journal={Ann Phys},
  volume={18},
  pages={639--641},
  year={1905}
}

**********************************************************************

Testing FirstBiblio.bib...

======================================================================
Inspecting script file csvtospace.sh...

File contents are:

**********************************************************************
#!/bin/bash

# Author: Tristan JC tjc19@ic.ac.uk
# Script: cvstospace.sh
# Description: Shell script that takes a .csv file and converts 
#              it into a new space separated values file. You can choose whether or
#              not to specify your own file path
# Arguments:  1 -> .csv file
# Date: Oct 2020

if [ $# -ne 1 ]
  then
    echo "wrong number of arguments, try again with 1 file you wish converted"
    exit
fi

if [ ${1: -4} != ".csv" ]
  then
     read -p "$1 is not labelled as a .csv file, continue anyway? (Yy/Nn)"
     if [[ $REPLY =~ ^[Nn]$ ]]
       then
         exit
     fi
fi

x=${1%.csv}
y=${x##*/}
NewFile="../Results/Spaced_$y.csv"

echo "Where new file will be: $NewFile"
read -p "Would you like to specify your own file path instead? (Yy/Nn)" -n 1 -r # self explanatory

if [[ $REPLY =~ ^[Yy]$ ]]
then
     echo
     echo "Enter your desired file path (eg. '../Results/worse.txt'):"
     read NewFile

fi
echo
touch $NewFile
echo "Creating space separated values version of $1"
cat $1 | tr -s "," " " >  $NewFile
echo "Done."
echo -e "You will find your new file here: $NewFile \n"
echo -e "Here is a teaser of your new file:\n"
head $NewFile
echo
exit

**********************************************************************

Testing csvtospace.sh...

Output (only first 500 characters): 


**********************************************************************
wrong number of arguments, try again with 1 file you wish converted

**********************************************************************

Code ran without errors

Time consumed = 0.00557s

======================================================================
Inspecting script file CompileLaTeX.sh...

File contents are:

**********************************************************************
#!/bin/bash

# Author: Tristan JC tjc19@ic.ac.uk
# Script: CompileLaTeX.sh
# Description: compiles tex file giving you a pdf
# Arguments: 1 tex file
# Date: 8 Oct 2020
if [ $# -ne 1 ]
    then
        echo "missing or too many arguments, try again with a single .tex file"
        exit
fi
if [ ${1: -4} != ".tex" ]
    then
        read -p "$1 is not labelled as a .tex file, try again with a single .tex file"
        exit
fi

x=$1
y=${x%.tex}

pdflatex $y.tex
pdflatex $y.tex
bibtex $y
pdflatex $y.tex
pdflatex $y.tex
evince $y.pdf &

## Cleanup
rm *~
rm *.aux
rm *.dvi
rm *.log
rm *.nav
rm *.out
rm *.snm
rm *.toc
rm *.bbl
rm *.blg

**********************************************************************

Testing CompileLaTeX.sh...

Output (only first 500 characters): 


**********************************************************************
missing or too many arguments, try again with a single .tex file

**********************************************************************

Code ran without errors

Time consumed = 0.01019s

======================================================================
Inspecting script file boilerplate.sh...

File contents are:

**********************************************************************
#!/bin/bash

# Author: Tristan JC tjc19@ic.ac.uk
# Script: boilerplate.sh
# Desc: Simple boilerplate for shell scripts
# Arguments: none
# Date: Oct 2020


echo -e "\nThis is a shell script! \n" #what does -e do?

# -e allows use of back slash escapes, in this case for use of making new lines 
# above and below our text 

#exit 

**********************************************************************

Testing boilerplate.sh...

Output (only first 500 characters): 


**********************************************************************

This is a shell script! 


**********************************************************************

Code ran without errors

Time consumed = 0.00716s

======================================================================
Inspecting script file FirstExample.tex...

File contents are:

**********************************************************************
\documentclass[12pt]{article}

\title{A Simple Document}

\date{}

\begin{document}
  \maketitle

  \begin{abstract}
    This paper bust be cool!
  \end{abstract}

  \section{Introduction}
    It's Einstein time

  \section{Materials \& Methods}
  One of the most famous equations is:
  \begin{equation}
  E = mc^2
  \end{equation}
  This equation was first proposed by Einstein in 1905
  \cite{einstein1905does}.

  \bibliographystyle{plain}
  \bibliography{FirstBiblio}
\end{document}

**********************************************************************

Testing FirstExample.tex...

======================================================================
Inspecting script file tabtocsv.sh...

File contents are:

**********************************************************************
#!/bin/bash

# Author: Tristan JC tjc19@ic.ac.uk
# Script: tabtocsv.sh
# Description: substitute tabs for csv in a file
#              Saves the output into a .csv file
# Arguments: 1 -> tab deliminated file
# Date: Oct 2020

if [ $# -ne 1 ]
  then
    echo "No or too many arguments supplied, try again with 1 file you wish converted"
    exit
fi

echo "Creating a comma deliminated version of $1 ..."
cat $1 | tr -s "\t" "," >> $1.csv
echo "Done!"
exit

**********************************************************************

Testing tabtocsv.sh...

Output (only first 500 characters): 


**********************************************************************
No or too many arguments supplied, try again with 1 file you wish converted

**********************************************************************

Code ran without errors

Time consumed = 0.00917s

======================================================================
Inspecting script file MyExampleScript.sh...

File contents are:

**********************************************************************
#!/bin/bash

# Author: Tristan JC tjc19@ic.ac.uk
# Script: MyExampleScript.sh
# Desc: Says hello to you
# Arguments: none
# Date: Oct 2020

msg1="Hello"
msg2=$USER
echo "$msg1 $msg2"
echo "Hello $USER"
echo

**********************************************************************

Testing MyExampleScript.sh...

Output (only first 500 characters): 


**********************************************************************
Hello mhasoba
Hello mhasoba


**********************************************************************

Code ran without errors

Time consumed = 0.00589s

======================================================================
======================================================================
Finished running scripts

Ran into 1 errors

======================================================================
======================================================================

FINISHED WEEKLY ASSESSMENT

Current Points for the Week = 100

NOTE THAT THESE ARE POINTS, NOT MARKS FOR THE WEEK!